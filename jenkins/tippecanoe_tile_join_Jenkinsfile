pipeline {
  agent {
        node {
            label 'node:slave'
        }
    }
  parameters {
        gitParameter name: 'BRANCH_TAG',
                     type: 'PT_BRANCH_TAG',
                     defaultValue: 'master'
        choice(choices: ['test', 'qa', 'prod'], description: 'Tier to deploy tiles to', name: 'TIER')
  }
  stages {
	stage('Clean Workspace') {
	  steps{
		cleanWs()
	  }
	}
    stage('Checkout repo and pull from S3') {
      steps {
        sh 'env'
        sh 'wget -O DOIRootCA2.cer http://sslhelp.doi.net/docs/DOIRootCA2.cer'
        checkout([$class: 'GitSCM',
                          branches: [[name: "${params.BRANCH_TAG}"]],
                          doGenerateSubmoduleConfigurations: false,
                          extensions: [],
                          gitTool: 'Default',
                          submoduleCfg: [],
                          userRemoteConfigs: [[url: 'https://github.com/wdwatkins/wbeep-processing']]
                        ])
        sh "mkdir ${WORKSPACE}/tile_dir_simple5"
        sh "mkdir ${WORKSPACE}/tiles"
        sh 'aws s3 sync s3://prod-owi-resources/resources/Application/wbeep/${TIER}/ . --exclude "*" --include "model_output_categorized.csv"'
        sh 'aws s3 sync s3://prod-owi-resources/resources/Application/wbeep/${TIER}/hru_shape/tile_dir_simple5 ${WORKSPACE}/tile_dir_simple5'
      }
    }
    stage('create tileset') {
      agent {
        docker {
          image 'code.chs.usgs.gov:5001/wma/iidd/wbeep-data-processing:tippecanoe-latest'
          alwaysPull true
          reuseNode true
        } 
      }
      steps {
        sh 'tile-join -pk --output-to-directory tiles -c model_output_categorized.csv tile_dir_simple5 --force' 
      }
    }
    stage('push to S3') {
      steps { 
         //TODO: match URL with TIER variable
          script {
                    if ("${TIER}" == "prod") {
                        targetDomain = "s3://wbeep-prod-website"
                    }   
                    else if ("${TIER}" == "qa") {
                        //only here for testing propagating variable
                        // we aren't using tiles hosted here
                        targetDomain = "s3://wbeep-qa-website"
                    } 
                    else {
                        targetDomain = "s3://wbeep-test-website"
                    }   
            }
        sh "echo ${targetDomain}; echo ${TIER}""
        sh 'aws s3 sync tiles ${targetDomain}/tiles --content-encoding "gzip" --content-type application/x-protobuf'
      }
    }
  }
}
